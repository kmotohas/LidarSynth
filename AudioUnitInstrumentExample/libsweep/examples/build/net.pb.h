// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net.proto

#ifndef PROTOBUF_INCLUDED_net_2eproto
#define PROTOBUF_INCLUDED_net_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_net_2eproto 

namespace protobuf_net_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
}  // namespace protobuf_net_2eproto
namespace sweep {
namespace proto {
class scan;
class scanDefaultTypeInternal;
extern scanDefaultTypeInternal _scan_default_instance_;
}  // namespace proto
}  // namespace sweep
namespace google {
namespace protobuf {
template<> ::sweep::proto::scan* Arena::CreateMaybeMessage<::sweep::proto::scan>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace sweep {
namespace proto {

// ===================================================================

class scan : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:sweep.proto.scan) */ {
 public:
  scan();
  virtual ~scan();

  scan(const scan& from);

  inline scan& operator=(const scan& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  scan(scan&& from) noexcept
    : scan() {
    *this = ::std::move(from);
  }

  inline scan& operator=(scan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const scan& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const scan* internal_default_instance() {
    return reinterpret_cast<const scan*>(
               &_scan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(scan* other);
  friend void swap(scan& a, scan& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline scan* New() const final {
    return CreateMaybeMessage<scan>(NULL);
  }

  scan* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<scan>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const scan& from);
  void MergeFrom(const scan& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(scan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 angle = 1 [packed = true];
  int angle_size() const;
  void clear_angle();
  static const int kAngleFieldNumber = 1;
  ::google::protobuf::int32 angle(int index) const;
  void set_angle(int index, ::google::protobuf::int32 value);
  void add_angle(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      angle() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_angle();

  // repeated int32 distance = 2 [packed = true];
  int distance_size() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 2;
  ::google::protobuf::int32 distance(int index) const;
  void set_distance(int index, ::google::protobuf::int32 value);
  void add_distance(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      distance() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_distance();

  // repeated int32 signal_strength = 3 [packed = true];
  int signal_strength_size() const;
  void clear_signal_strength();
  static const int kSignalStrengthFieldNumber = 3;
  ::google::protobuf::int32 signal_strength(int index) const;
  void set_signal_strength(int index, ::google::protobuf::int32 value);
  void add_signal_strength(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      signal_strength() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_signal_strength();

  // @@protoc_insertion_point(class_scope:sweep.proto.scan)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > angle_;
  mutable int _angle_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > distance_;
  mutable int _distance_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > signal_strength_;
  mutable int _signal_strength_cached_byte_size_;
  friend struct ::protobuf_net_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// scan

// repeated int32 angle = 1 [packed = true];
inline int scan::angle_size() const {
  return angle_.size();
}
inline void scan::clear_angle() {
  angle_.Clear();
}
inline ::google::protobuf::int32 scan::angle(int index) const {
  // @@protoc_insertion_point(field_get:sweep.proto.scan.angle)
  return angle_.Get(index);
}
inline void scan::set_angle(int index, ::google::protobuf::int32 value) {
  angle_.Set(index, value);
  // @@protoc_insertion_point(field_set:sweep.proto.scan.angle)
}
inline void scan::add_angle(::google::protobuf::int32 value) {
  angle_.Add(value);
  // @@protoc_insertion_point(field_add:sweep.proto.scan.angle)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
scan::angle() const {
  // @@protoc_insertion_point(field_list:sweep.proto.scan.angle)
  return angle_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
scan::mutable_angle() {
  // @@protoc_insertion_point(field_mutable_list:sweep.proto.scan.angle)
  return &angle_;
}

// repeated int32 distance = 2 [packed = true];
inline int scan::distance_size() const {
  return distance_.size();
}
inline void scan::clear_distance() {
  distance_.Clear();
}
inline ::google::protobuf::int32 scan::distance(int index) const {
  // @@protoc_insertion_point(field_get:sweep.proto.scan.distance)
  return distance_.Get(index);
}
inline void scan::set_distance(int index, ::google::protobuf::int32 value) {
  distance_.Set(index, value);
  // @@protoc_insertion_point(field_set:sweep.proto.scan.distance)
}
inline void scan::add_distance(::google::protobuf::int32 value) {
  distance_.Add(value);
  // @@protoc_insertion_point(field_add:sweep.proto.scan.distance)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
scan::distance() const {
  // @@protoc_insertion_point(field_list:sweep.proto.scan.distance)
  return distance_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
scan::mutable_distance() {
  // @@protoc_insertion_point(field_mutable_list:sweep.proto.scan.distance)
  return &distance_;
}

// repeated int32 signal_strength = 3 [packed = true];
inline int scan::signal_strength_size() const {
  return signal_strength_.size();
}
inline void scan::clear_signal_strength() {
  signal_strength_.Clear();
}
inline ::google::protobuf::int32 scan::signal_strength(int index) const {
  // @@protoc_insertion_point(field_get:sweep.proto.scan.signal_strength)
  return signal_strength_.Get(index);
}
inline void scan::set_signal_strength(int index, ::google::protobuf::int32 value) {
  signal_strength_.Set(index, value);
  // @@protoc_insertion_point(field_set:sweep.proto.scan.signal_strength)
}
inline void scan::add_signal_strength(::google::protobuf::int32 value) {
  signal_strength_.Add(value);
  // @@protoc_insertion_point(field_add:sweep.proto.scan.signal_strength)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
scan::signal_strength() const {
  // @@protoc_insertion_point(field_list:sweep.proto.scan.signal_strength)
  return signal_strength_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
scan::mutable_signal_strength() {
  // @@protoc_insertion_point(field_mutable_list:sweep.proto.scan.signal_strength)
  return &signal_strength_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace sweep

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_net_2eproto
